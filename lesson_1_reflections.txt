Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

A: By seeing only the lines of code that had change, let you focus on the areas that likely contained the bug and avoid the majority of code that wasn't edited.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

A: By having all the versions, it allows you to recover quickly from any mistakes that have been made. To go back to points in history where you knew the code was working properly. Comparing old to new commits will help you find any mistakes much quicker than manually searching the all the code.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

A: The pros are choosing when to commit will produce the easiest code to compare with previous versions. The programmer gets to choose the commit based on logical program units. Cons would be that you have to learn when is a good time to make a commit, make sure you don't forget to do them, and if you don't know git, you have to invest the time to learn the tool.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A: So you can see where all the changes were made that will affect your program. Otherwise, it would be more tedious to have to track all the files down and do each individually.

Q: How can you use the commands git log and git diff to view the history of files?

A: git log - displays the list of commits with a description of what was done. git diff - compares the differences between the two commits showing which lines were added and deleted.

Q: How might using version control make you more confident to make changes that could break something?

A: Knowing how easy and quickly it would be to spot your mistake or even revert back to a previous working version will make a programmer less afraid of breaking the code.

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: Try using it for web projects, html, css, and javascript files. It will certainly take some getting used to as git is a new tool for me, but understand it will be worth the effort in the end.